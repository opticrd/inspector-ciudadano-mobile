name: Build Xamarin app

on:
  push:
    branches:
      - "main"
      - "staging"
      - "testing"
      - "github-action"
  pull_request:
    branches:
      - "main"
      - "staging"
      - "testing"
      - "github-action"
    paths:
      - "**/workflows/**"
      - "**/src/**"

env: 
  ANDROID_NAME: Inspector.Android
  ANDROID_BUILD_APK: x_do.gob.ogtic.inspector.apk
  IOS_NAME: Inspector.iOS
  IOS_BUILD_APK: do.gob.ogtic.Inspector.ipa
  BUILD_CONFIGURATION: Release-Agent
  MONO_VERSION: '6.10'
  REPO_PATH: 'opticrd/inspector-ciudadano-mobile'

jobs:
  build-android:
    runs-on: macos-latest
    env: 
          SLN_FILE_PATH: './src/Inspector.sln'
          CSPROJ_FILE_PATH: './src/Inspector.Android/Inspector.Android.csproj'
          APK_FILE_PATH: './src/Inspector.Android/bin/Release/x_do.gob.ogtic.inspector.apk'
          ANDROID_VERSION: '11.1'
          DISTRIBUTION_GROUP: 'Internal'

    steps:
        - name: Checkout repository and submodules
          uses: actions/checkout@v2
          with:
            submodules: 'recursive'
            token: ${{ secrets.INSPECTOR_PAT }}

        #- name: Set default Xamarin SDK versions
        #  run: |
        #    $VM_ASSETS/select-xamarin-sdk-v2.sh --mono=${{ env.MONO_VERSION }} --android=${{ env.ANDROID_VERSION }}

        #- uses: actions/setup-dotnet@v1
        #  with:
        #    dotnet-version: '3.1.x'

        - name: Restore NuGet packages
          run: nuget restore

        - name: Build Android
          run: MSBuild /t:PackageForAndroid /p:Configuration=${{ env.BUILD_CONFIGURATION }} /p:AndroidPackageFormat=apk ${{ env.CSPROJ_FILE_PATH }}

        #- uses: actions/upload-artifact@v2
        #  with:
        #    name: android-apk
        #    path: "**/bin/${{ env.BUILD_CONFIGURATION }}/${{ env.ANDROID_BUILD_APK }}"
        #    if-no-files-found: error
        #    retention-days: 1

        - name: Setup App Center CLI
          run: npm install -g appcenter-cli
        
        - name: Upload Android app to App Center
          run: appcenter distribute release --silent --file ${{ env.APK_FILE_PATH }} --app ${{ env.REPO_PATH }} --group ${{ env.DISTRIBUTION_GROUP }} --token ${{ secrets.APP_CENTER_TOKEN }}

  #build-ios:
  #  runs-on: macos-latest
  #  continue-on-error: true
  #  env:
  #    SLN_FILE_PATH: './src/Inspector.sln'
  #    CSPROJ_FILE_PATH: './src/Inspector.iOS/Inspector.iOS.csproj'
  #    IOS_VERSION: '14.10'

  #  steps:
  #  - uses: actions/checkout@v2
  #    with:
  #      submodules: 'recursive'
  #      token: ${{ secrets.OGTIC_PAT }}

  #  - name: Set default Xamarin SDK versions
  #    run: |
  #      $VM_ASSETS/select-xamarin-sdk-v2.sh --mono=${{ env.MONO_VERSION }} --ios=${{ env.IOS_VERSION }}

  #  - name: Set default Xcode 12.3
  #    run: |
  #      XCODE_ROOT=/Applications/Xcode_12.3.0.app
  #      echo "MD_APPLE_SDK_ROOT=$XCODE_ROOT" >> $GITHUB_ENV
  #      sudo xcode-select -s $XCODE_ROOT

  #  - uses: actions/setup-dotnet@v1
  #    with:
  #      dotnet-version: '3.1.x'

  #  - run: |
  #      nuget restore ${{ env.SLN_FILE_PATH }}
  #      msbuild /p:Platform=iPhoneSimulator /t:Rebuild /p:Configuration=${{ env.BUILD_CONFIGURATION }} /p:UseSharedCompilation=false ${{ env.CSPROJ_FILE_PATH }}

  #distribute-android:
  #  if: github.event_name == 'pull_request'
  #  runs-on: ubuntu-latest
  #  needs: [ build-android ]

  #  steps:
  #  - uses: actions/download-artifact@v2
  #    with:
  #      name: android-apk
  #      path: ./

  #  - name: Display structure of downloaded files
  #    run: ls -R

  #  - name: App Center
  #    uses: wzieba/AppCenter-Github-Action@v1.0.0
  #    with:
  #      appName: gobdo/Reportero-Ciudadano-Droid
  #      token: ${{ secrets.APP_CENTER_TOKEN }}
  #      group: Internal
  #      file: ./src/${{ env.ANDROID_NAME }}/bin/${{ env.BUILD_CONFIGURATION }}/${{ env.ANDROID_BUILD_APK }}
  #      releaseNotes: "github action test"
